{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","_ref","_jsx","className","href","concat","children","TodoInfo","todo","currentUser","usersFromServer","find","user","_jsxs","String","classNames","TodoList","todos","map","EMPTY_TODO","Math","max","todosFromServer","App","todoList","setTodoList","useState","newTodo","setNewTodo","isOptionWrong","setIsOptionWrong","isTitleValueWrong","setIsTitleValueWrong","action","method","onSubmit","event","preventDefault","isDataWrong","trim","type","placeholder","value","onChange","target","clearValue","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"0KAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2BC3DI,GACb,CACEH,GAAI,EACJI,MAAO,qBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,GACJI,MAAO,kBACPC,WAAW,EACXC,OAAQ,GAEV,CACEN,GAAI,EACJI,MAAO,qCACPC,WAAW,EACXC,OAAQ,I,uBCVL,MAAMC,EAA4BC,IAAA,IAAC,KACxCP,EAAI,MACJE,GACDK,EAAA,OACCC,cAAA,KAAGC,UAAU,WAAWC,KAAI,UAAAC,OAAYT,GAAQU,SAC7CZ,KCFQa,EAA4BN,IAElC,IAFmC,KACxCO,GACDP,EACC,MAAMQ,EACJC,EAAgBC,MAAKC,GAAQA,EAAKnB,KAAOe,EAAKT,SAEhD,OACEc,eAAA,WAEE,UAASC,OAAON,EAAKf,IACrBU,UAAWY,IAAW,WAAY,CAChC,sBAAuBP,EAAKV,YAC3BQ,SAAA,CAEHJ,cAAA,MAAIC,UAAU,kBAAiBG,SAC5BE,EAAKX,QAGPY,GACCP,cAACF,EAAQ,CACPN,KAAMe,EAAYf,KAClBE,MAAOa,EAAYb,UAblBY,EAAKf,KCVHuB,EAA4Bf,IAAA,IAAC,MACxCgB,GACDhB,EAAA,OACCC,cAAA,WAASC,UAAU,WAAUG,SAC1BW,EAAMC,KAAIV,GACTN,cAACK,EAAQ,CAEPC,KAAMA,GADDA,EAAKf,SCNZ0B,EAAa,CACjB1B,GAHmB2B,KAAKC,OAAOC,EAAgBJ,KAAIV,GAAQA,EAAKf,MAG7C,EACnBI,MAAO,GACPC,WAAW,EACXC,OAAQ,GAGGwB,EAAMA,KACjB,MAAOC,EAAUC,GAAeC,mBAASJ,IAClCK,EAASC,GAAcF,mBAASP,IAEhCU,EAAeC,GAAoBJ,oBAAS,IAC5CK,EAAmBC,GAAwBN,oBAAS,GA4C3D,OACEb,eAAA,OAAKV,UAAU,MAAKG,SAAA,CAClBJ,cAAA,MAAAI,SAAI,kBAEJO,eAAA,QACEoB,OAAO,aACPC,OAAO,OACPC,SAjDYC,IAChBA,EAAMC,iBAEN,IAAIC,GAAc,EAEK,IAAnBX,EAAQ5B,SACVuC,GAAc,EACdR,GAAiB,IAGU,KAAzBH,EAAQ9B,MAAM0C,SAChBD,GAAc,EACdN,GAAqB,IAGnBM,IAIJb,EAAY,IAAID,EAAUG,IAC1BR,EAAW1B,IAAM,EACjBmC,EAAWT,KA4BYb,SAAA,CAEnBO,eAAA,OAAKV,UAAU,QAAOG,SAAA,CACpBJ,cAAA,SACEsC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOf,EAAQ9B,MACf8C,SAhCPP,IACD,MAAM,MAAEM,GAAUN,EAAMQ,OAElBC,EAAaH,EAAMI,QAAQ,4CAAyB,IAE1DlB,EAAW,IAAKD,EAAS9B,MAAOgD,IAChCb,GAAqB,MA4BdD,GACC7B,cAAA,QAAMC,UAAU,QAAOG,SAAC,4BAI5BO,eAAA,OAAKV,UAAU,QAAOG,SAAA,CACpBO,eAAA,UACE,UAAQ,aACR6B,MAAO5B,OAAOa,EAAQ5B,QACtB4C,SAjCPP,IACD,MAAM,MAAEM,GAAUN,EAAMQ,OAExBhB,EAAW,IAAKD,EAAS5B,QAAS2C,IAClCZ,GAAiB,IA6BWxB,SAAA,CAEpBJ,cAAA,UAAQwC,MAAM,IAAIK,UAAQ,EAAAzC,SAAC,kBAEzBI,EAAgBQ,KAAIN,GACpBV,cAAA,UAAQwC,MAAO9B,EAAKnB,GAAGa,SAAgBM,EAAKlB,MAAfkB,EAAKnB,SAIrCoC,GACC3B,cAAA,QAAMC,UAAU,QAAOG,SAAC,4BAI5BJ,cAAA,UAAQsC,KAAK,SAAS,UAAQ,eAAclC,SAAC,WAK/CJ,cAACc,EAAQ,CACPC,MAAOO,QC3GfwB,IAASC,OAAO/C,cAACqB,EAAG,IAAK2B,SAASC,eAAe,U","file":"static/js/main.3a355025.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\n\ntype Props = {\n  name: string,\n  email: string,\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  name,\n  email,\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n}) => {\n  const currentUser\n  = usersFromServer.find(user => user.id === todo.userId);\n\n  return (\n    <article\n      key={todo.id}\n      data-id={String(todo.id)}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {currentUser && (\n        <UserInfo\n          name={currentUser.name}\n          email={currentUser.email}\n        />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nconst theBiggestId = Math.max(...todosFromServer.map(todo => todo.id));\n\nconst EMPTY_TODO = {\n  id: theBiggestId + 1,\n  title: '',\n  completed: false,\n  userId: 0,\n};\n\nexport const App = () => {\n  const [todoList, setTodoList] = useState(todosFromServer);\n  const [newTodo, setNewTodo] = useState(EMPTY_TODO);\n\n  const [isOptionWrong, setIsOptionWrong] = useState(false);\n  const [isTitleValueWrong, setIsTitleValueWrong] = useState(false);\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    let isDataWrong = false;\n\n    if (newTodo.userId === 0) {\n      isDataWrong = true;\n      setIsOptionWrong(true);\n    }\n\n    if (newTodo.title.trim() === '') {\n      isDataWrong = true;\n      setIsTitleValueWrong(true);\n    }\n\n    if (isDataWrong) {\n      return;\n    }\n\n    setTodoList([...todoList, newTodo]);\n    EMPTY_TODO.id += 1;\n    setNewTodo(EMPTY_TODO);\n  };\n\n  const setTitle\n  = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    const clearValue = value.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n\n    setNewTodo({ ...newTodo, title: clearValue });\n    setIsTitleValueWrong(false);\n  };\n\n  const setOption\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setNewTodo({ ...newTodo, userId: +value });\n    setIsOptionWrong(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTodo.title}\n            onChange={setTitle}\n          />\n          {isTitleValueWrong && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={String(newTodo.userId)}\n            onChange={setOption}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            { usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {isOptionWrong && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todoList}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}